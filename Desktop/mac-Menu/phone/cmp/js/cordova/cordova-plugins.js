!function(){"undefined"==typeof top.cordovaPluginsLoaded&&(cordova.define("cordova-plugin-camera.camera",function(a,b,c){var d=a("cordova/argscheck"),e=a("cordova/exec"),f=a("./Camera"),g={};for(var h in f)g[h]=f[h];g.getPicture=function(a,b,c){d.checkArgs("fFO","Camera.getPicture",arguments),c=c||{};var g=d.getValue,h=g(c.pictureNum,9),i=g(c.quality,50),j=g(c.destinationType,f.DestinationType.FILE_URI),k=g(c.sourceType,f.PictureSourceType.CAMERA),l=g(c.targetWidth,-1),m=g(c.targetHeight,-1),n=g(c.encodingType,f.EncodingType.JPEG),o=g(c.mediaType,f.MediaType.PICTURE),p=!!c.allowEdit,q=!!c.correctOrientation,r=!!c.saveToPhotoAlbum,s=g(c.popoverOptions,null),t=g(c.cameraDirection,f.Direction.BACK),u=c.maxFileSize,v=[i,j,k,l,m,n,o,p,q,r,s,t,h,u];e(a,b,"Camera","takePicture",v)},g.cleanup=function(a,b){e(a,b,"Camera","cleanup",[])},c.exports=g}),cordova.define("cordova-plugin-camera.Camera",function(a,b,c){c.exports={DestinationType:{DATA_URL:0,FILE_URI:1,NATIVE_URI:2},EncodingType:{JPEG:0,PNG:1},MediaType:{PICTURE:0,VIDEO:1,ALLMEDIA:2},PictureSourceType:{PHOTOLIBRARY:0,CAMERA:1,SAVEDPHOTOALBUM:2},PopoverArrowDirection:{ARROW_UP:1,ARROW_DOWN:2,ARROW_LEFT:4,ARROW_RIGHT:8,ARROW_ANY:15},Direction:{BACK:0,FRONT:1}}}),cordova.define("cordova-plugin-camera.CameraPopoverHandle",function(a,b,c){var d=(a("cordova/exec"),function(){this.setPosition=function(a){console.log("CameraPopoverHandle.setPosition is only supported on iOS.")}});c.exports=d}),cordova.define("cordova-plugin-camera.CameraPopoverOptions",function(a,b,c){var d=a("./Camera"),e=function(a,b,c,e,f){this.x=a||0,this.y=b||32,this.width=c||320,this.height=e||480,this.arrowDir=f||d.PopoverArrowDirection.ARROW_ANY};c.exports=e}),cordova.define("cordova-plugin-device.cmpDevice",function(a,b,c){function d(){this.available=!1,this.platform=null,this.version=null,this.uuid=null,this.cordova=null,this.model=null,this.manufacturer=null,this.enbrand=null,this.cnbrand=null;var a=this;f.onCordovaReady.subscribe(function(){a.getInfo(function(b){var c=i.version;a.available=!0,a.platform=b.platform,a.version=b.version,a.uuid=b.uuid,a.cordova=c,a.model=b.model,a.manufacturer=b.manufacturer||"unknown",a.enbrand=b.enbrand,a.cnbrand=b.cnbrand,f.onCordovaInfoReady.fire()},function(b){a.available=!1,g.alert("[ERROR] Error initializing Cordova: "+b)})})}var e=a("cordova/argscheck"),f=a("cordova/channel"),g=a("cordova/utils"),h=a("cordova/exec"),i=a("cordova");f.createSticky("onCordovaInfoReady"),f.waitForInitialization("onCordovaInfoReady"),d.prototype.getInfo=function(a,b){e.checkArgs("fF","CMPDevicePlugin.getInfo",arguments),h(a,b,"CMPDevicePlugin","getDeviceInfo",[])},c.exports=new d}),cordova.define("cordova-plugin-media.Media",function(a,b,c){function d(a){if("status"!=a.action)throw new Error("Unknown media action"+a.action);i.onStatus(a.status.id,a.status.msgType,a.status.value)}var e=a("cordova/argscheck"),f=a("cordova/utils"),g=a("cordova/exec"),h={},i=function(a,b,c,d){e.checkArgs("sFFF","Media",arguments),this.id=f.createUUID(),h[this.id]=this,this.src=a,this.successCallback=b,this.errorCallback=c,this.statusCallback=d,this._duration=-1,this._position=-1,g(null,this.errorCallback,"Media","create",[this.id,this.src])};if(i.MEDIA_STATE=1,i.MEDIA_DURATION=2,i.MEDIA_POSITION=3,i.MEDIA_ERROR=9,i.MEDIA_NONE=0,i.MEDIA_STARTING=1,i.MEDIA_RUNNING=2,i.MEDIA_PAUSED=3,i.MEDIA_STOPPED=4,i.MEDIA_MSG=["None","Starting","Running","Paused","Stopped"],i.get=function(a){return h[a]},i.prototype.play=function(a){g(null,null,"Media","startPlayingAudio",[this.id,this.src,a])},i.prototype.stop=function(){var a=this;g(function(){a._position=0},this.errorCallback,"Media","stopPlayingAudio",[this.id])},i.prototype.seekTo=function(a){var b=this;g(function(a){b._position=a},this.errorCallback,"Media","seekToAudio",[this.id,a])},i.prototype.pause=function(){g(null,this.errorCallback,"Media","pausePlayingAudio",[this.id])},i.prototype.getDuration=function(){return this._duration},i.prototype.getCurrentPosition=function(a,b){var c=this;g(function(b){c._position=b,a(b)},b,"Media","getCurrentPositionAudio",[this.id])},i.prototype.startRecord=function(){g(null,this.errorCallback,"Media","startRecordingAudio",[this.id,this.src])},i.prototype.stopRecord=function(){g(null,this.errorCallback,"Media","stopRecordingAudio",[this.id])},i.prototype.release=function(){g(null,this.errorCallback,"Media","release",[this.id])},i.prototype.setVolume=function(a){g(null,null,"Media","setVolume",[this.id,a])},i.onStatus=function(a,b,c){var d=h[a];if(d)switch(b){case i.MEDIA_STATE:d.statusCallback&&d.statusCallback(c),c==i.MEDIA_STOPPED&&d.successCallback&&d.successCallback();break;case i.MEDIA_DURATION:d._duration=c;break;case i.MEDIA_ERROR:d.errorCallback&&d.errorCallback(c);break;case i.MEDIA_POSITION:d._position=Number(c);break;default:console.error&&console.error("Unhandled Media.onStatus :: "+b)}else console.error&&console.error("Received Media.onStatus callback for unknown media :: "+a)},c.exports=i,"android"===cordova.platformId||"amazon-fireos"===cordova.platformId||"windowsphone"===cordova.platformId){var j=a("cordova/channel");j.createSticky("onMediaPluginReady"),j.onCordovaReady.subscribe(function(){g(d,void 0,"Media","messageChannel",[]),j.initializationComplete("onMediaPluginReady")})}}),cordova.define("cordova-plugin-media.MediaError",function(a,b,c){var d=window.MediaError;d||(window.MediaError=d=function(a,b){this.code="undefined"!=typeof a?a:null,this.message=b||""}),d.MEDIA_ERR_NONE_ACTIVE=d.MEDIA_ERR_NONE_ACTIVE||0,d.MEDIA_ERR_ABORTED=d.MEDIA_ERR_ABORTED||1,d.MEDIA_ERR_NETWORK=d.MEDIA_ERR_NETWORK||2,d.MEDIA_ERR_DECODE=d.MEDIA_ERR_DECODE||3,d.MEDIA_ERR_NONE_SUPPORTED=d.MEDIA_ERR_NONE_SUPPORTED||4,d.MEDIA_ERR_SRC_NOT_SUPPORTED=d.MEDIA_ERR_SRC_NOT_SUPPORTED||4,c.exports=d}),cordova.define("cordova-plugin-network-information.Connection",function(a,b,c){c.exports={UNKNOWN:"unknown",ETHERNET:"ethernet",WIFI:"wifi",CELL_2G:"2g",CELL_3G:"3g",CELL_4G:"4g",CELL:"cellular",NONE:"none"}}),cordova.define("cordova-plugin-network-information.network",function(a,b,c){function d(){this.type="unknown"}var e=a("cordova/exec"),f=a("cordova"),g=a("cordova/channel"),h=a("cordova/utils");"browser"!==f.platformId&&"undefined"!=typeof navigator&&h.defineGetter(navigator,"onLine",function(){return"none"!=this.connection.type}),d.prototype.getInfo=function(a,b){e(a,b,"NetworkStatus","getConnectionInfo",[])};var i=new d,j=null,k=500;g.createSticky("onCordovaConnectionReady"),g.waitForInitialization("onCordovaConnectionReady"),g.onCordovaReady.subscribe(function(){i.getInfo(function(a){i.type=a,"none"===a?j=setTimeout(function(){j=null},k):null!==j&&(clearTimeout(j),j=null),2!==g.onCordovaConnectionReady.state&&g.onCordovaConnectionReady.fire()},function(a){2!==g.onCordovaConnectionReady.state&&g.onCordovaConnectionReady.fire(),console.log("Error initializing Network Connection: "+a)})}),c.exports=i}),cordova.define("cordova-sqlite-storage.SQLitePlugin",function(a,b,c){(function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n;m=this,c=/^\s*(?:drop|delete|insert|update|create)\s/i,a="INIT",b="OPEN",n={},k=function(a,b){var c;return c=a,b||(b=0),c||(c=new Error("a plugin had an error but provided no response"),c.code=b),"string"==typeof c&&(c=new Error(a),c.code=b),!c.code&&c.message&&(c.code=b),c.code||c.message||(c=new Error("an unknown error was returned: "+JSON.stringify(c)),c.code=b),c},l=window.setImmediate||function(a){window.setTimeout(a,0)},h=function(a){return function(){var b,c,d;if(d=arguments.length){for(b=[],c=-1;++c<d;)b[c]=arguments[c];return a.call(this,b)}return a.call(this,[])}},e=function(a,b,c){var d;if(!a||!a.name)throw k("Cannot create a SQLitePlugin db instance without a db name");if(d=a.name,"string"!=typeof d)throw k("sqlite plugin database name must be a string");this.openargs=a,this.dbname=d,this.openSuccess=b,this.openError=c,this.openSuccess||(this.openSuccess=function(){console.log("DB opened: "+d)}),this.openError||(this.openError=function(a){console.log(a.message)}),this.open(this.openSuccess,this.openError)},e.prototype.databaseFeatures={isSQLitePluginDatabase:!0},e.prototype.openDBs={},e.prototype.addTransaction=function(b){n[this.dbname]||(n[this.dbname]={queue:[],inProgress:!1}),n[this.dbname].queue.push(b),this.dbname in this.openDBs&&this.openDBs[this.dbname]!==a?this.startNextTransaction():this.dbname in this.openDBs?console.log("new transaction is waiting for open operation"):console.log("database is closed, new transaction is [stuck] waiting until db is opened again!")},e.prototype.transaction=function(a,b,c){return this.openDBs[this.dbname]?void this.addTransaction(new f(this,a,b,c,!0,!1)):void b(k("database not open"))},e.prototype.readTransaction=function(a,b,c){return this.openDBs[this.dbname]?void this.addTransaction(new f(this,a,b,c,!1,!0)):void b(k("database not open"))},e.prototype.startNextTransaction=function(){var a;a=this,l(function(c){return function(){var d;return c.dbname in c.openDBs&&c.openDBs[c.dbname]===b?(d=n[a.dbname])?void(d.queue.length>0&&!d.inProgress&&(d.inProgress=!0,d.queue.shift().start())):void console.log("cannot start next transaction: database connection is lost"):void console.log("cannot start next transaction: database not open")}}(this))},e.prototype.abortAllPendingTransactions=function(){var a,b,c,d,e;if(e=n[this.dbname],e&&e.queue.length>0){for(c=e.queue,a=0,b=c.length;b>a;a++)d=c[a],d.abortFromQ(k("Invalid database handle"));e.queue=[],e.inProgress=!1}},e.prototype.open=function(c,d){var e,f;this.dbname in this.openDBs?(console.log("database already open: "+this.dbname),l(function(a){return function(){c(a)}}(this))):(console.log("OPEN database: "+this.dbname),f=function(a){return function(){var d;a.openDBs[a.dbname]||console.log("database was closed during open operation"),a.dbname in a.openDBs&&(a.openDBs[a.dbname]=b),c&&c(a),d=n[a.dbname],d&&d.queue.length>0&&!d.inProgress&&a.startNextTransaction()}}(this),e=function(a){return function(){console.log("OPEN database: "+a.dbname+" failed, aborting any pending transactions"),d&&d(k("Could not open database")),delete a.openDBs[a.dbname],a.abortAllPendingTransactions()}}(this),this.openDBs[this.dbname]=a,cordova.exec(f,e,"SQLitePlugin","open",[this.openargs]))},e.prototype.close=function(a,b){if(this.dbname in this.openDBs){if(n[this.dbname]&&n[this.dbname].inProgress)return console.log("cannot close: transaction is in progress"),void b(k("database cannot be closed while a transaction is in progress"));console.log("CLOSE database: "+this.dbname),delete this.openDBs[this.dbname],n[this.dbname]?console.log("closing db with transaction queue length: "+n[this.dbname].queue.length):console.log("closing db with no transaction lock state"),cordova.exec(a,b,"SQLitePlugin","close",[{path:this.dbname}])}else console.log("cannot close: database is not open"),b&&l(function(){return b()})},e.prototype.executeSql=function(a,b,c,d){var e,g,h;h=function(a,b){return c?c(b):void 0},e=function(a,b){return d?d(b):void 0},g=function(c){c.addStatement(a,b,h,e)},this.addTransaction(new f(this,g,null,null,!1,!1))},e.prototype.sqlBatch=function(a,b,c){var d,e,g,h,i;if(!a||a.constructor!==Array)throw k("sqlBatch expects an array");for(d=[],e=0,g=a.length;g>e;e++)if(i=a[e],i.constructor===Array){if(0===i.length)throw k("sqlBatch array element of zero (0) length");d.push({sql:i[0],params:0===i.length?[]:i[1]})}else d.push({sql:i,params:[]});h=function(a){var b,c,e,f;for(f=[],c=0,e=d.length;e>c;c++)b=d[c],f.push(a.addStatement(b.sql,b.params,null,null));return f},this.addTransaction(new f(this,h,c,b,!0,!1))},f=function(a,b,c,d,e,f){if("function"!=typeof b)throw k("transaction expected a function");this.db=a,this.fn=b,this.error=c,this.success=d,this.txlock=e,this.readOnly=f,this.executes=[],e?this.addStatement("BEGIN",[],null,function(a,b){throw k("unable to begin transaction: "+b.message,b.code)}):this.addStatement("SELECT 1",[],null,null)},f.prototype.start=function(){var a,b;try{this.fn(this),this.run()}catch(b){a=b,n[this.db.dbname].inProgress=!1,this.db.startNextTransaction(),this.error&&this.error(k(a))}},f.prototype.executeSql=function(a,b,d,e){if(this.finalized)throw{message:"InvalidStateError: DOM Exception 11: This transaction is already finalized. Transactions are committed after its success or failure handlers are called. If you are using a Promise to handle callbacks, be aware that implementations following the A+ standard adhere to run-to-completion semantics and so Promise resolution occurs on a subsequent tick and therefore after the transaction commits.",code:11};return this.readOnly&&c.test(a)?void this.handleStatementFailure(e,{message:"invalid sql for a read-only transaction"}):void this.addStatement(a,b,d,e)},f.prototype.addStatement=function(a,b,c,d){var e,f,g,h,i,j;if(h="string"==typeof a?a:a.toString(),g=[],b&&b.constructor===Array)for(e=0,f=b.length;f>e;e++)j=b[e],i=typeof j,g.push(null===j||void 0===j||"number"===i||"string"===i?j:j.toString());this.executes.push({success:c,error:d,sql:h,params:g})},f.prototype.handleStatementSuccess=function(a,b){var c,d;a&&(d=b.rows||[],c={rows:{item:function(a){return d[a]},length:d.length},rowsAffected:b.rowsAffected||0,insertId:b.insertId||void 0},a(this,c))},f.prototype.handleStatementFailure=function(a,b){if(!a)throw k("a statement with no error handler failed: "+b.message,b.code);if(a(this,b)!==!1)throw k("a statement error callback did not return false: "+b.message,b.code)},f.prototype.run=function(){var a,b,c,d,e,f,g,h,i,j;for(i=null,g=[],a=this.executes,j=a.length,this.executes=[],h=this,b=function(b,c){return function(d){var e,f;try{c?h.handleStatementSuccess(a[b].success,d):h.handleStatementFailure(a[b].error,k(d))}catch(f){e=f,i||(i=k(e))}0===--j&&(i?h.abort(i):h.executes.length>0?h.run():h.finish())}},c=0,e={};c<a.length;)f=a[c],e[c]={success:b(c,!0),error:b(c,!1)},g.push({qid:1111,sql:f.sql,params:f.params}),c++;d=function(a){var b,d,f,g,h,i,j;for(d=a.length-1,c=b=0,h=d;h>=0?h>=b:b>=h;c=h>=0?++b:--b)g=a[c],j=g.type,i=g.result,f=e[c],f&&f[j]&&f[j](i)},cordova.exec(d,null,"SQLitePlugin","backgroundExecuteSqlBatch",[{dbargs:{dbname:this.db.dbname},executes:g}])},f.prototype.abort=function(a){var b,c,d;this.finalized||(d=this,c=function(b){n[b.db.dbname].inProgress=!1,b.db.startNextTransaction(),b.error&&b.error(a)},b=function(a,b){n[a.db.dbname].inProgress=!1,a.db.startNextTransaction(),a.error&&a.error(k("error while trying to roll back: "+b.message,b.code))},this.finalized=!0,this.txlock?(this.addStatement("ROLLBACK",[],c,b),this.run()):c(d))},f.prototype.finish=function(){var a,b,c;this.finalized||(c=this,b=function(a){n[a.db.dbname].inProgress=!1,a.db.startNextTransaction(),a.success&&a.success()},a=function(a,b){n[a.db.dbname].inProgress=!1,a.db.startNextTransaction(),a.error&&a.error(k("error while trying to commit: "+b.message,b.code))},this.finalized=!0,this.txlock?(this.addStatement("COMMIT",[],b,a),this.run()):b(c))},f.prototype.abortFromQ=function(a){this.error&&this.error(a)},i=["docs","libs","nosync"],j={"default":"nosync",Documents:"docs",Library:"libs"},d={openDatabase:h(function(a){var b,c,d,f;if(a.length<1||!a[0])throw k("Sorry missing mandatory open arguments object in openDatabase call");if(a[0].constructor===String)throw k("Sorry first openDatabase argument must be an object");if(f=a[0],!f.name)throw k("Database name value is missing in openDatabase call");if(!f.iosDatabaseLocation&&!f.location&&0!==f.location)throw k("Database location or iosDatabaseLocation value is now mandatory in openDatabase call");if(f.location&&f.iosDatabaseLocation)throw k("Abiguous: both location or iosDatabaseLocation values are present in openDatabase call");if(b=f.location&&"default"===f.location?j["default"]:f.iosDatabaseLocation?j[f.iosDatabaseLocation]:i[f.location],!b)throw k("Valid iOS database location could not be determined in openDatabase call");return f.dblocation=b,f.createFromLocation&&1===f.createFromLocation&&(f.createFromResource="1"),f.androidDatabaseImplementation&&2===f.androidDatabaseImplementation&&(f.androidOldDatabaseImplementation=1),f.androidLockWorkaround&&1===f.androidLockWorkaround&&(f.androidBugWorkaround=1),d=null,c=null,a.length>=2&&(d=a[1],a.length>2&&(c=a[2])),new e(f,d,c)}),deleteDatabase:function(a,b,c){var d,f,g;if(d={},a.constructor===String)throw k("Sorry first deleteDatabase argument must be an object");if(!a||!a.name)throw new Error("Please specify db name");if(g=a.name,"string"!=typeof g)throw k("delete database name must be a string");if(d.path=g,!a.iosDatabaseLocation&&!a.location&&0!==a.location)throw k("Database location or iosDatabaseLocation value is now mandatory in deleteDatabase call");if(a.location&&a.iosDatabaseLocation)throw k("Abiguous: both location or iosDatabaseLocation values are present in deleteDatabase call");if(f=a.location&&"default"===a.location?j["default"]:a.iosDatabaseLocation?j[a.iosDatabaseLocation]:i[a.location],!f)throw k("Valid iOS database location could not be determined in deleteDatabase call");return d.dblocation=f,delete e.prototype.openDBs[d.path],cordova.exec(b,c,"SQLitePlugin","delete",[d])}},g={DBNAME:"___$$$___litehelpers___$$$___test___$$$___.db",start:function(a,b){return d.deleteDatabase({name:g.DBNAME,location:"default"},function(){return g.start2(a,b)},function(){return g.start2(a,b)})},start2:function(a,b){return d.openDatabase({name:g.DBNAME,location:"default"},function(c){return c.sqlBatch(["CREATE TABLE TestTable(TestColumn);",["INSERT INTO TestTable (TestColumn) VALUES (?);",["test-value"]]],function(){return c.executeSql("SELECT * FROM TestTable",[],function(e){return e.rows?e.rows.length?1!==e.rows.length?void g.finishWithError(b,"Incorrect resutSet.rows.length value: "+e.rows.length+" (expected: 1)"):e.rows.item(0).TestColumn?"test-value"!==e.rows.item(0).TestColumn?void g.finishWithError(b,"Incorrect resutSet.rows.item(0).TestColumn value: "+e.rows.item(0).TestColumn+" (expected: 'test-value')"):c.transaction(function(a){return a.executeSql("UPDATE TestTable SET TestColumn = ?",["new-value"])},function(a){return g.finishWithError(b,"UPDATE transaction error: "+a)},function(){return c.readTransaction(function(a){return a.executeSql("SELECT * FROM TestTable",[],function(a,b){if(!b.rows)throw k("Missing resutSet.rows");if(!b.rows.length)throw k("Missing resutSet.rows.length");if(1!==b.rows.length)throw k("Incorrect resutSet.rows.length value: "+e.rows.length+" (expected: 1)");if(!b.rows.item(0).TestColumn)throw k("Missing resutSet.rows.item(0).TestColumn");if("new-value"!==b.rows.item(0).TestColumn)throw k("Incorrect resutSet.rows.item(0).TestColumn value: "+e.rows.item(0).TestColumn+" (expected: 'test-value')")})},function(a){return g.finishWithError(b,"readTransaction error: "+a)},function(){return c.close(function(){return d.deleteDatabase({name:g.DBNAME,location:"default"},a,function(a){return g.finishWithError(b,"Cleanup error: "+a)})},function(a){return g.finishWithError(b,"close error: "+a)})})}):void g.finishWithError(b,"Missing resutSet.rows.item(0).TestColumn"):void g.finishWithError(b,"Missing resutSet.rows.length"):void g.finishWithError(b,"Missing resutSet.rows")},function(a){return g.finishWithError(b,"SELECT error: "+a)})},function(a){return g.finishWithError(b,"sql batch error: "+a)})},function(a){return g.finishWithError(b,"Open database error: "+a)})},finishWithError:function(a,b){return d.deleteDatabase({name:g.DBNAME,location:"default"},function(){return a(k(b))},function(c){return a(k("Cleanup error: "+c+" for error: "+b))})}},m.sqlitePlugin={sqliteFeatures:{isSQLitePlugin:!0},echoTest:function(a,b){var c,d;return d=function(c){return"test-string"===c?a():b("Mismatch: got: '"+c+"' expected 'test-string'")},c=function(a){return b(a)},cordova.exec(a,b,"SQLitePlugin","echoStringValue",[{value:"test-string"}])},selfTest:g.start,openDatabase:d.openDatabase,deleteDatabase:d.deleteDatabase}}).call(this)}),cordova.define("cordova-plugin-file.fileSystemPaths",function(a,b,c){var d=a("cordova/exec"),e=a("cordova/channel");b.file={applicationDirectory:null,applicationStorageDirectory:null,dataDirectory:null,cacheDirectory:null,externalApplicationStorageDirectory:null,externalDataDirectory:null,externalCacheDirectory:null,externalRootDirectory:null,tempDirectory:null,syncedDataDirectory:null,documentsDirectory:null,sharedDirectory:null},e.onCordovaReady.subscribe(function(){function a(a){for(var c in a)b.file[c]=a[c];e.initializationComplete("onFileSystemPathsReady")}d(a,null,"File","requestAllPaths",[])})}),window.cordovaPluginsLoaded=!0)}();